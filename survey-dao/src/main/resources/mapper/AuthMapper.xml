<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yh.survey.dao.AuthDao">
    <resultMap id="BaseResultMap" type="Auth">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="auth_name" property="authName" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="create_user" property="createUser" jdbcType="VARCHAR"/>
        <result column="update_user" property="updateUser" jdbcType="VARCHAR"/>
        <result column="is_delete" property="isDelete" jdbcType="TINYINT"/>
    </resultMap>

    <sql id="allColumnsWithOutId">
        (auth_name,create_time,update_time,create_user,update_user,is_delete)
    </sql>

    <sql id="allColumns">
        id,auth_name,create_time,update_time,create_user,update_user,is_delete
    </sql>

    <!-- 插入方法，插入后返回主键-->
    <insert id="insert" parameterType="Auth" useGeneratedKeys="true" keyProperty="id">
        insert into auth
        <include refid="allColumnsWithOutId"/>
        values (
        #{authName,jdbcType=VARCHAR},
        now(),
        now(),
        #{createUser,jdbcType=VARCHAR},
        #{createUser,jdbcType=VARCHAR},
        0
        )
    </insert>

    <update id="update" parameterType="Role">
        update auth
        <set>
            update_time = now(),update_user=#{updateUser,jdbcType=VARCHAR},
            <trim>
                <if test="authName != null and authName != ''">
                    auth_name = #{authName,jdbcType=VARCHAR},
                </if>
            </trim>
        </set>
        where id =#{id,jdbcType=BIGINT}
    </update>

    <delete id="delete" parameterType="java.lang.Long">
        update auth set is_delete = 1,update_time = now() where id = #{id,jdbcType=BIGINT}
    </delete>

    <select id="getAuthByCondition" resultMap="BaseResultMap" parameterType="AuthCondition" useCache="true">
        SELECT
        <include refid="allColumns"/>
        from auth
        <where>
            <if test="id != null and id != 0">
                and id = #{id,jdbcType=BIGINT}
            </if>
            <if test="authName != null and authName != ''">
                and auth_name = #{authName,jdbcType=VARCHAR}
            </if>
            <choose>
                <when test="isDelete != null">
                    and is_delete = #{isDelete,jdbcType=TINYINT}
                </when>
                <otherwise>
                    and is_delete = 0
                </otherwise>
            </choose>
        </where>
        limit 1
    </select>

    <select id="findAuthList" resultMap="BaseResultMap">
        SELECT
        <include refid="allColumns"/>
        from auth
        <where>
            <if test="id != null and id != 0">
                and id = #{id,jdbcType=BIGINT}
            </if>
            <if test="authName != null and authName != ''">
                and auth_name = #{authName,jdbcType=VARCHAR}
            </if>
            <choose>
                <when test="isDelete != null">
                    and is_delete = #{isDelete,jdbcType=TINYINT}
                </when>
                <otherwise>
                    and is_delete = 0
                </otherwise>
            </choose>
        </where>
    </select>

    <update id="batchDelete" parameterType="java.util.List">
        update auth
        set is_delete = 1,update_time = now(),update_user = #{updateUser,jdbcType=VARCHAR}
        where id in
        <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
            #{item,jdbcType=BIGINT}
        </foreach>
    </update>

</mapper>